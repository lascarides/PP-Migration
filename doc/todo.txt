
PROTOTYPE TO-DOS
------------------------------------------------------------
- *** ADD BASIC AUTHENTICATION AND REDEPLOY
- Store facet selections in sessions
	- For format switching
	- For "Recent Searches"
- Fix parliamentary sessions
- Veridian for all newspaper views
- Accurate dates for all sections
- Mark facets when they've been interacted with
- Pagination
- Title pages for other formats
- Fill in front-pages for non-today dates
- Next/prev search results
- Thumbnail/list view switchers
- Add region map (somehow. lightbox?)
- Search term highlighting
- Update URLs, and use 'gem rack-rewrite' to start mapping the rules.
- More tooltips
- Timeline in D3. Reflect current search.
- Tutorial? At least think about it...


CACHING AND SEPARATION
------------------------------------------------------------
CWP
	- Static text for About, Home, etc
	- Essays for each publication/collection
FRONT-END (cronned from backend)
	- Publication/collection list
	- Facet value list
	- Publication dates
	- Total articles segmented by date/pub
BACK-END
	- Document metadata
	- Page metadata
	- Logical section metadata


UX QUESTIONS
------------------------------------------------------------
- What do we need to communicate on the zero results pages?
- What do the thumbnail pages for articles look like?
- Communication around change in date ranges
- Do the facets communicate what's going on?
- Think about Niupepa and Troopship use cases
- Are front pages a good idea, or should we always go straight to articles?
- Do "subject" and "people" facets make any sense in the browse context?
- Do people use the Zoomable view?
- What about ALL of the facets in Manuscripts? 
- TEST EVERYTHING. BE HONEST.



PRE-PRODUCTION
------------------------------------------------------------
- Think about how facet/title metadata model would work
	- Investigate Backbone/Angular?
	- Number of articles per title per year
	- Facet name, granularity
	- Collections, sub-collections
- Better, more scalable structure of SCSS and reusable widgets
- What do unit/integration tests look like?
- Spec caching/failover parameters


